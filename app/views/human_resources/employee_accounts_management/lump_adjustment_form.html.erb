<%
   # If there is no lump_adjustment; transfer to these variables.
   @selected_lump_adjustment.id ||= ''
   @selected_lump_adjustment.amount ||= ''
   @selected_lump_adjustment.signed_type ||= ''
   @selected_lump_adjustment.remark ||=
   @selected_lump_adjustment.employee_id ||= ''
   @selected_lump_adjustment.date_of_effectivity ||= ''
%>

<section class='small-10 columns'>
  <div class='mainheader'> Lump Adjustment Form </div>
  <div class='subdescription'> Set the Status of a Lump Adjustment </div>
  <hr>
  <div class='small-6 columns generic_form'>
    <% if @selected_lump_adjustment.id.present? %>
        <span class="current_edit_id"> <%= 'Editing Lump Adjustment with ID: ' + @selected_lump_adjustment.id %> </span> <br><br> <!-- this is for the current lump adjustment ID or OBJECT ID; not employee-->
    <% end %>
    <%= form_tag( {action: :process_lump_adjustment_form}, multipart: true, class: 'create_form', id: "new_lump_adjustment_form", :"data-parsley-validate" => "" ) do %>
        <%= hidden_field_tag('lump_adjustment[id]', @selected_lump_adjustment.id ) %>
        <select name='lump_adjustment[employee_id]'
                id='new_lump_adjustment_employee'
                class='employee_select_field'
                required="required" >
          <!-- DO NOT CHANGE class 'employee_select_field'; this is for the employee_quick_profile thing; do change other attributes in the select field -->
          <option value="" disabled selected>Select Employee</option>
          <% @employees.each do |employee| %> <!-- This selects the current employee and marks the option 'selected' if found -->
              <% if employee.id == @selected_lump_adjustment.employee_id %>
                  <option value=<%= employee.id %> selected><%= employee.actor.name %></option>
              <% else %>
                  <option value=<%= employee.id %>><%= employee.actor.name %></option>
              <% end %>
          <% end %>
        </select>
        <!-- input of type datetime-local do not have a placeholder so you have to write the label manually outside the input -->
        <%= text_area_tag("lump_adjustment[remark]", content = @selected_lump_adjustment.remark, options = {class: "remark_description", :"data-parsley-trigger" => "keyup", :"data-parsley-maxlength"=>"128", :placeholder => 'Remarks' }) %>
        <input type="submit" class="small button" value="SUBMIT" />
    <% end %>
  </div>
  <%= renderCorePartial('employee_quick_profile') %>
</section>