<%

   if selected_model_instance.class != SystemAssociation
     models = selected_model_instance.class.all_polymorphic_types(polymorphic_attribute.to_sym)
   else
     models = SystemAssociation.allowed_associations
   end

   current_type = (polymorphic_attribute + '_type').to_sym
   current_id = (polymorphic_attribute + '_id').to_sym

   #unless wizard_activated? || selected_model_instance.class == SystemAssociation
   if ( (selected_model_instance.class == SystemAssociation) || (wizard_activated? == false))
%>

<div>
  <div class="form-block" style="float: left; width: 50%;">
    <div class="form_label"> Associative Model </div>
    <select name='<%= (controller_path + '[' + polymorphic_attribute + '_id]') %>'
            class=''
            id='<%= (controller_path + '_' + polymorphic_attribute + '_id').gsub("/", "_") %>'>
      <option value="" disabled selected>Select Model</option>
      <% models.each do |allowable_model|%>
          <%
             instance_models = allowable_model.all()
          %>
          <% instance_models.each do |model| %>
              <% if model.id ==  selected_model_instance[current_id] %>
                  <option value=<%= model.id %> data-modeltype="<%= allowable_model %>" selected>
                    <%= (model.main_representation)[:attribute] %>
                  </option>
              <% else %>
                  <option value=<%= model.id %> data-modeltype="<%= allowable_model %>" >
                    <%= (model.main_representation)[:attribute] %>
                  </option>
              <% end %>
          <% end %>
      <% end %>
    </select>

  </div>

  <style>
    .current_value > a {
        background-color: #808080;
        padding: 6px;
        font-size: 12px;
    }
  </style>

  <input id="<%= (polymorphic_attribute + '_type') %>"
         name="<%= (controller_path + '[' + polymorphic_attribute + '_type]') %>"
         type="hidden"
         value="">

</div>


<script>

    // Get Selector Element ID
    model_selector_id = ('#' + '<%= controller_path + '_' + polymorphic_attribute + '_id' %>').replace("/", "_").replace("/", "_");

    // Initialize Selectize for Type
    var $current_selectize = $(model_selector_id).selectize({
        onInitialize: function () {
            var s = this;
            this.revertSettings.$children.each(function () {
                $.extend(s.options[this.value], $(this).data());
            });
        },
        onChange: function (value) {
            // Get Selector Element Type
            model_selector_type = ('#' + '<%= polymorphic_attribute + '_type' %>');

            var option = this.options[value];
            $(model_selector_type).val( option.modeltype );
        }
    });

    <% unless wizard_activated? %>
        <% if action_name == 'edit' || action_name == 'show'  %>
            $current_selectize[0].selectize.setValue('<%= selected_model_instance[current_id] %>');
        <% end %>
    <% else %>
        $current_selectize[0].selectize.setValue('<%= params[:wizard_primary_model_id] %>');
        model_selector_type = ('#' + '<%= polymorphic_attribute + '_type' %>');
        $(model_selector_type).val( '<%= params[:wizard_primary_model_type] %>' );
    <% end %>

    <% unless wizard_activated? %>
        <% if action_name == 'show' %>
            try { $current_selectize[0].selectize.disable(); }
            catch(err) {}
        <% end %>
    <% end %>
</script>
<% else %>

    <%= f.input_field current_type, as: :hidden, :value => params[:wizard_primary_model_type] %>
    <%= f.input_field current_id, as: :hidden, :value => params[:wizard_primary_model_id]  %>

<% end %>
